# Generated by Django 2.1 on 2021-11-11 16:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Materialcost',
            fields=[
                ('supplier', models.CharField(db_column='Supplier', max_length=30, primary_key=True, serialize=False)),
                ('costperpound', models.FloatField(db_column='CostPerPound')),
            ],
            options={
                'db_table': 'MaterialCost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Materialinventory',
            fields=[
                ('materialname', models.CharField(db_column='MaterialName', max_length=30, primary_key=True, serialize=False)),
                ('numberofboxes', models.SmallIntegerField(db_column='NumberofBoxes')),
                ('locations', models.CharField(blank=True, db_column='Locations', max_length=20, null=True)),
                ('premixed', models.BooleanField(db_column='PreMixed')),
                ('priceperpound', models.FloatField(db_column='PricePerPound')),
            ],
            options={
                'db_table': 'MaterialInventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mixingform',
            fields=[
                ('batchname', models.CharField(db_column='BatchName', max_length=15, primary_key=True, serialize=False)),
                ('batchdate', models.DateField(blank=True, db_column='BatchDate', null=True)),
                ('material1', models.CharField(db_column='Material1', max_length=20)),
                ('weight1', models.SmallIntegerField(blank=True, db_column='Weight1', null=True)),
                ('material2', models.CharField(blank=True, db_column='Material2', max_length=20, null=True)),
                ('weight2', models.SmallIntegerField(blank=True, db_column='Weight2', null=True)),
                ('material3', models.CharField(blank=True, db_column='Material3', max_length=20, null=True)),
                ('weight3', models.SmallIntegerField(blank=True, db_column='Weight3', null=True)),
                ('material4', models.CharField(blank=True, db_column='Material4', max_length=20, null=True)),
                ('weight4', models.SmallIntegerField(blank=True, db_column='Weight4', null=True)),
                ('material5', models.CharField(blank=True, db_column='Material5', max_length=20, null=True)),
                ('weight5', models.SmallIntegerField(blank=True, db_column='Weight5', null=True)),
                ('material6', models.CharField(blank=True, db_column='Material6', max_length=20, null=True)),
                ('weight6', models.SmallIntegerField(blank=True, db_column='Weight6', null=True)),
                ('material7', models.CharField(blank=True, db_column='Material7', max_length=20, null=True)),
                ('weight7', models.SmallIntegerField(blank=True, db_column='Weight7', null=True)),
                ('material8', models.CharField(blank=True, db_column='Material8', max_length=20, null=True)),
                ('weight8', models.SmallIntegerField(blank=True, db_column='Weight8', null=True)),
                ('material9', models.CharField(blank=True, db_column='Material9', max_length=20, null=True)),
                ('weight9', models.SmallIntegerField(blank=True, db_column='Weight9', null=True)),
                ('material10', models.CharField(blank=True, db_column='Material10', max_length=20, null=True)),
                ('weight10', models.SmallIntegerField(blank=True, db_column='Weight10', null=True)),
                ('colour', models.CharField(blank=True, db_column='Colour', max_length=20, null=True)),
                ('colourweight', models.FloatField(blank=True, db_column='ColourWeight', null=True)),
                ('foamweight', models.FloatField(blank=True, db_column='FoamWeight', null=True)),
            ],
            options={
                'db_table': 'MixingForm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ordersheetmachine1',
            fields=[
                ('ponumber', models.CharField(db_column='PONumber', max_length=15, primary_key=True, serialize=False)),
                ('projectedstartdate', models.DateField(db_column='ProjectedStartDate')),
                ('projectedenddate', models.DateField(db_column='ProjectedEndDate')),
                ('duedate', models.DateField(db_column='DueDate')),
                ('lengthofrunindays', models.FloatField(blank=True, db_column='LengthofRuninDays', null=True)),
                ('priorityrank', models.SmallIntegerField(db_column='PriorityRank')),
                ('skidsremaining', models.FloatField(db_column='SkidsRemaining')),
                ('pcs', models.SmallIntegerField(db_column='PCS')),
                ('pcssent', models.SmallIntegerField(db_column='PCSSent')),
                ('pcsremaining', models.SmallIntegerField(db_column='PCSRemaining')),
                ('customer', models.CharField(db_column='Customer', max_length=20)),
                ('qualitynotes', models.CharField(blank=True, db_column='QualityNotes', max_length=500, null=True)),
            ],
            options={
                'db_table': 'OrderSheetMachine1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ordersheetmachine2',
            fields=[
                ('ponumber', models.CharField(db_column='PONumber', max_length=15, primary_key=True, serialize=False)),
                ('projectedstartdate', models.DateField(db_column='ProjectedStartDate')),
                ('projectedenddate', models.DateField(db_column='ProjectedEndDate')),
                ('duedate', models.DateField(db_column='DueDate')),
                ('lengthofrunindays', models.FloatField(blank=True, db_column='LengthofRuninDays', null=True)),
                ('priorityrank', models.SmallIntegerField(db_column='PriorityRank')),
                ('skidsremaining', models.FloatField(db_column='SkidsRemaining')),
                ('pcs', models.SmallIntegerField(db_column='PCS')),
                ('pcssent', models.SmallIntegerField(db_column='PCSSent')),
                ('pcsremaining', models.SmallIntegerField(db_column='PCSRemaining')),
                ('customer', models.CharField(db_column='Customer', max_length=20)),
                ('qualitynotes', models.CharField(blank=True, db_column='QualityNotes', max_length=500, null=True)),
            ],
            options={
                'db_table': 'OrderSheetMachine2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ordersheetmachine3',
            fields=[
                ('ponumber', models.CharField(db_column='PONumber', max_length=15, primary_key=True, serialize=False)),
                ('projectedstartdate', models.DateField(db_column='ProjectedStartDate')),
                ('projectedenddate', models.DateField(db_column='ProjectedEndDate')),
                ('duedate', models.DateField(db_column='DueDate')),
                ('lengthofrunindays', models.FloatField(blank=True, db_column='LengthofRuninDays', null=True)),
                ('priorityrank', models.SmallIntegerField(db_column='PriorityRank')),
                ('skidsremaining', models.FloatField(db_column='SkidsRemaining')),
                ('pcs', models.SmallIntegerField(db_column='PCS')),
                ('pcssent', models.SmallIntegerField(db_column='PCSSent')),
                ('pcsremaining', models.SmallIntegerField(db_column='PCSRemaining')),
                ('customer', models.CharField(db_column='Customer', max_length=20)),
                ('qualitynotes', models.CharField(blank=True, db_column='QualityNotes', max_length=500, null=True)),
            ],
            options={
                'db_table': 'OrderSheetMachine3',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Picandsum',
            fields=[
                ('startdate', models.DateField(db_column='StartDate', primary_key=True, serialize=False)),
                ('enddate', models.DateField(blank=True, db_column='EndDate', null=True)),
                ('link', models.CharField(db_column='Link', max_length=100)),
            ],
            options={
                'db_table': 'PicAndSum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Productprofiles',
            fields=[
                ('productname', models.CharField(db_column='ProductName', max_length=40, primary_key=True, serialize=False)),
                ('colour', models.CharField(db_column='Colour', max_length=15)),
            ],
            options={
                'db_table': 'ProductProfiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Batchcosttracking',
            fields=[
                ('batchname', models.ForeignKey(db_column='BatchName', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CWBDataApp.Mixingform')),
                ('batchdate', models.DateField(blank=True, db_column='BatchDate', null=True)),
                ('totalcost', models.FloatField(db_column='TotalCost')),
                ('totalweight', models.SmallIntegerField(db_column='TotalWeight')),
                ('priceperpound', models.FloatField(db_column='PricePerPound')),
                ('weight1', models.SmallIntegerField(blank=True, db_column='Weight1', null=True)),
                ('value1', models.FloatField(blank=True, db_column='Value1', null=True)),
                ('weight2', models.SmallIntegerField(blank=True, db_column='Weight2', null=True)),
                ('value2', models.FloatField(blank=True, db_column='Value2', null=True)),
                ('weight3', models.SmallIntegerField(blank=True, db_column='Weight3', null=True)),
                ('value3', models.FloatField(blank=True, db_column='Value3', null=True)),
                ('weight4', models.SmallIntegerField(blank=True, db_column='Weight4', null=True)),
                ('value4', models.FloatField(blank=True, db_column='Value4', null=True)),
                ('colour', models.CharField(blank=True, db_column='Colour', max_length=20, null=True)),
                ('colourweight', models.FloatField(blank=True, db_column='ColourWeight', null=True)),
                ('colourvalue', models.FloatField(blank=True, db_column='ColourValue', null=True)),
                ('foam', models.CharField(blank=True, db_column='Foam', max_length=4, null=True)),
                ('foamweight', models.FloatField(blank=True, db_column='FoamWeight', null=True)),
                ('foamvalue', models.FloatField(blank=True, db_column='FoamValue', null=True)),
                ('totalshredweight', models.SmallIntegerField(blank=True, db_column='TotalShredWeight', null=True)),
            ],
            options={
                'db_table': 'BatchCostTracking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Productinventory',
            fields=[
                ('productname', models.ForeignKey(db_column='ProductName', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='productprofile', serialize=False, to='CWBDataApp.Productprofiles')),
                ('embossed', models.BooleanField(db_column='Embossed')),
                ('doublesided', models.BooleanField(db_column='DoubleSided')),
                ('numberofskids', models.SmallIntegerField(db_column='NumberOfSkids')),
            ],
            options={
                'db_table': 'ProductInventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Materialtesting',
            fields=[
                ('projectnumber', models.SmallIntegerField(db_column='ProjectNumber')),
                ('testname', models.ForeignKey(db_column='TestName', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CWBDataApp.Batchcosttracking')),
                ('testnumber', models.SmallIntegerField(db_column='TestNumber')),
                ('testdate', models.DateField(blank=True, db_column='TestDate', null=True)),
                ('labourused', models.CharField(db_column='LabourUsed', max_length=50)),
                ('machinetimeused', models.SmallIntegerField(db_column='MachineTimeUsed')),
                ('productionline', models.SmallIntegerField(blank=True, db_column='ProductionLine', null=True)),
                ('materialstested', models.CharField(db_column='MaterialsTested', max_length=200)),
                ('othermaterialstested', models.CharField(blank=True, db_column='OtherMaterialsTested', max_length=200, null=True)),
                ('moulds', models.CharField(db_column='Moulds', max_length=40)),
                ('reasonfortest', models.CharField(blank=True, db_column='ReasonForTest', max_length=200, null=True)),
                ('expectedresults', models.CharField(blank=True, db_column='ExpectedResults', max_length=200, null=True)),
                ('difficultiesencountered', models.CharField(blank=True, db_column='DifficultiesEncountered', max_length=200, null=True)),
                ('nextstep', models.CharField(db_column='NextStep', max_length=100)),
                ('estimatedcostofmaterial', models.SmallIntegerField(db_column='EstimatedCostofMaterial')),
                ('estimatedcostoflabour', models.SmallIntegerField(db_column='EstimatedCostofLabour')),
                ('totalcostoftest', models.SmallIntegerField(db_column='TotalCostofTest')),
            ],
            options={
                'db_table': 'MaterialTesting',
                'managed': False,
            },
        ),
    ]
